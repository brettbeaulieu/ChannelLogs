services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: backenddb
      POSTGRES_USER: maire
      POSTGRES_PASSWORD: maire
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: "2.0"
  celery:
    build:
      context: ${BACKEND_DIR}
      dockerfile: Dockerfile.Celery.production
    depends_on:
      - redis
      - backend
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
        limits:
          cpus: "4.0"

  redis:
    image: redis:latest


  backend:
    build:
      context: ${BACKEND_DIR}
      dockerfile: Dockerfile.production
    command: sh -c "python manage.py migrate && gunicorn backend.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.production
    depends_on:
      - db
      - redis
    deploy:
      resources:
        limits:
          cpus: "2.0"

  frontend:
    build:
      context: ${FRONTEND_DIR}
      dockerfile: Dockerfile.production
    ports:
      - "3000:3000"
volumes:
  postgres_data:
